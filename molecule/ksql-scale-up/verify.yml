### Validates that 2 new ksql nodes are added properly
### Validates that two KSQL clusters are running
### Validates that ksql3 is added to KSQL cluster
### Validates that ksql4 is added to KSQL cluster
### Validates that Control Center Can connect to each KSQL cluster
---
- name: Verify - ksql
  hosts: ksql3
  gather_facts: false
  tasks:
    - name: Check line properties file
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: ksql.service.id
        expected_value: ksql

- name: Verify - ksql
  hosts: ksql4
  gather_facts: false
  tasks:
    - name: Check line properties file
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: ksql.service.id
        expected_value: ksql
    - name: Get ClusterID and ServiceID for ksql1
      uri:
        url: "https://ksql1:8088"
        status_code: 200
        validate_certs: false
        client_cert: /var/ssl/private/ksql.crt
        client_key: /var/ssl/private/ksql.key
      register: ksql1_response
    - name: Get ClusterID and ServiceID for ksql2
      uri:
        url: "http://ksql2:8088"
        status_code: 200
      register: ksql2_response
    - name: Get ClusterID and ServiceID for ksql3
      uri:
        url: "http://ksql3:8088"
        status_code: 200
      register: ksql3_response
    - name: Get ClusterID and ServiceID for ksql4
      uri:
        url: "https://ksql4:8088"
        status_code: 200
        validate_certs: false
        client_cert: /var/ssl/private/ksql.crt
        client_key: /var/ssl/private/ksql.key
      register: ksql4_response
    - name: Validate kafka-Cluster ID and ksql-clusterid
      assert:
        that:
          - "ksql1_response.json.KsqlServerInfo.kafkaClusterId == ksql2_response.json.KsqlServerInfo.kafkaClusterId  == ksql3_response.json.KsqlServerInfo.kafkaClusterId  == ksql4_response.json.KsqlServerInfo.kafkaClusterId"
          - "ksql1_response.json.KsqlServerInfo.ksqlServiceId == ksql4_response.json.KsqlServerInfo.ksqlServiceId == ksql2_response.json.KsqlServerInfo.ksqlServiceId == ksql3_response.json.KsqlServerInfo.ksqlServiceId == 'ksql'"

- name: Verify - control_center
  hosts: control_center
  gather_facts: false
  tasks:
    - name: Check line multi ksql line
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.ksql.ksql.ssl.truststore.location
        expected_value: /var/ssl/private/control_center.truststore.jks
    - name: Check line ksql cluster
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.ksql.ksql.url
        expected_value: http://ksql1:8088,http://ksql2:8088,http://ksql3:8088,http://ksql4:8088
    - name: Check line connect cluster2
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.connect.connect-cluster1.cluster
        expected_value: http://kafka-connect1:8083
    - name: Check advertised url default
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.ksql.ksql.advertised.url
        expected_value: http://ksql1:8088,http://ksql2:8088,http://ksql3:8088,http://ksql4:8088

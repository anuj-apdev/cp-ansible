---
  - include_role:
      name: ssl
    vars:
      truststore_storepass: "{{kafka_broker_truststore_storepass}}"
      truststore_path: "{{kafka_broker_pkcs12_truststore_path}}"
      keystore_path: "{{kafka_broker_pkcs12_keystore_path}}"
      keystore_storepass: "{{kafka_broker_keystore_storepass}}"
      keystore_keypass: "{{kafka_broker_keystore_keypass}}"
      service_name: kafka_broker
      user: "{{kafka_broker_user}}"
      group: "{{kafka_broker_group}}"
      hostnames: "{{ ([inventory_hostname, ansible_fqdn, ansible_host, ansible_ssh_host|default(omit), hostname|default(omit)] + kafka_broker_listeners | confluent.platform.get_hostnames(inventory_hostname)) | unique }}"
      ca_cert_path: "{{kafka_broker_ca_cert_path}}"
      cert_path: "{{kafka_broker_cert_path}}"
      key_path: "{{kafka_broker_key_path}}"
      export_certs: "{{kafka_broker_export_certs}}"
      create_bouncy_castle_keystore: "{{fips_enabled}}"
      bcfks_truststore_path: "{{kafka_broker_bcfks_truststore_path}}"
      bcfks_keystore_path: "{{kafka_broker_bcfks_keystore_path}}"
    when: >
      zookeeper_ssl_enabled|bool or
      kafka_broker_listeners | confluent.platform.ssl_required(ssl_enabled) or
      kafka_broker_rest_ssl_enabled|bool or
      mds_broker_listener.ssl_enabled|bool or
      mds_tls_enabled|bool or
      ( kafka_broker_schema_validation_enabled and 'schema_registry' in groups and schema_registry_ssl_enabled )
    tags: ssl
